apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: '2025-06-25T06:18:24Z'
    generateName: ksqldb-server-5664d9c6c7-
    labels:
      app: ksqldb-server
      pod-template-hash: 5664d9c6c7
    name: ksqldb-server-5664d9c6c7-lz6cq
    namespace: kafka
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ksqldb-server-5664d9c6c7
      uid: 92d6f3dc-5eb1-4d1f-9001-618dc173e83c
    resourceVersion: '503731'
    uid: 1a80f7da-37ef-4f3f-a483-53b711a358da
  spec:
    containers:
    - env:
      - name: KSQL_BOOTSTRAP_SERVERS
        value: PLAINTEXT://kafka1:9092
      - name: KSQL_LISTENERS
        value: http://0.0.0.0:8088/
      - name: KSQL_KSQL_SERVICE_ID
        value: ksqldb-server_
      image: confluentinc/cp-ksqldb-server:7.8.0
      imagePullPolicy: IfNotPresent
      name: ksqldb-server
      ports:
      - containerPort: 8088
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4kk8k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-kafkapool-21228749-vmss000003
    nodeSelector:
      agentpool: kafkapool
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-4kk8k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: '2025-08-25T22:41:50Z'
      status: 'True'
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: '2025-08-25T22:39:43Z'
      status: 'True'
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: '2025-08-25T22:41:50Z'
      status: 'True'
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: '2025-08-25T22:41:50Z'
      status: 'True'
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: '2025-08-25T22:39:43Z'
      status: 'True'
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://23f1457ed15d88b5e5174019c99fd9333c7e17c4bcfb486990dca0c5bca535e5
      image: docker.io/confluentinc/cp-ksqldb-server:7.8.0
      imageID: docker.io/confluentinc/cp-ksqldb-server@sha256:2946dd64fdee1bdc850f0e2feb74931cb29f3eabcb2c7fad7d06a0d26418096e
      lastState: {}
      name: ksqldb-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: '2025-08-25T22:41:49Z'
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4kk8k
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.0.28
    podIPs:
    - ip: 10.244.0.28
    qosClass: BestEffort
    startTime: '2025-08-25T22:39:43Z'
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: '1'
      deployment.kubernetes.io/max-replicas: '2'
      deployment.kubernetes.io/revision: '1'
    creationTimestamp: '2025-06-24T22:02:42Z'
    generation: 1
    labels:
      app: ksqldb-server
      pod-template-hash: 5664d9c6c7
    name: ksqldb-server-5664d9c6c7
    namespace: kafka
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ksqldb-server
      uid: f8ba97a0-ebdf-446a-a9ea-fa937295a09a
    resourceVersion: '503734'
    uid: 92d6f3dc-5eb1-4d1f-9001-618dc173e83c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ksqldb-server
        pod-template-hash: 5664d9c6c7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ksqldb-server
          pod-template-hash: 5664d9c6c7
      spec:
        containers:
        - env:
          - name: KSQL_BOOTSTRAP_SERVERS
            value: PLAINTEXT://kafka1:9092
          - name: KSQL_LISTENERS
            value: http://0.0.0.0:8088/
          - name: KSQL_KSQL_SERVICE_ID
            value: ksqldb-server_
          image: confluentinc/cp-ksqldb-server:7.8.0
          imagePullPolicy: IfNotPresent
          name: ksqldb-server
          ports:
          - containerPort: 8088
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          agentpool: kafkapool
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
