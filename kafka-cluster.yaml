apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    labels:
      app: kafka-schema-registry
      pod-template-hash: 6cf6b5d779
    name: kafka-schema-registry-6cf6b5d779-vkkgz
    namespace: kafka
  spec:
    containers:
    - env:
      - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
        value: PLAINTEXT://kafka1:9092
      - name: SCHEMA_REGISTRY_HOST_NAME
        value: kafka-schema-registry
      - name: SCHEMA_REGISTRY_LISTENERS
        value: http://0.0.0.0:8081
      image: confluentinc/cp-schema-registry:7.8.0
      name: kafka-schema-registry
      ports:
      - containerPort: 8081
        protocol: TCP
    volumes:
    - name: kube-api-access-hk6vk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    labels:
      app: kafka1
      pod-template-hash: 6ffb9f7bbf
    name: kafka1-6ffb9f7bbf-vq4g4
    namespace: kafka
  spec:
    containers:
    - env:
      - name: KAFKA_ADVERTISED_LISTENERS
        value: INTERNAL://kafka1:9092,EXTERNAL://134.33.24.51:30502
      - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
        value: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - name: KAFKA_INTER_BROKER_LISTENER_NAME
        value: INTERNAL
      - name: KAFKA_LISTENERS
        value: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9094
      - name: KAFKA_ZOOKEEPER_CONNECT
        value: zoo1:2181
      - name: KAFKA_BROKER_ID
        value: '1'
      - name: KAFKA_LOG4J_LOGGERS
        value: kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO
      - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        value: '1'
      - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
        value: '1'
      - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
        value: '1'
      - name: KAFKA_JMX_PORT
        value: '9999'
      - name: KAFKA_JMX_HOSTNAME
        value: localhost
      - name: KAFKA_AUTHORIZER_CLASS_NAME
        value: kafka.security.authorizer.AclAuthorizer
      - name: KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND
        value: 'true'
      image: confluentinc/cp-kafka:7.8.0
      name: kafka1
      ports:
      - containerPort: 9092
        protocol: TCP
      - containerPort: 9094
        protocol: TCP
      - containerPort: 9999
        protocol: TCP
    volumes:
    - name: kube-api-access-8sg5f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    labels:
      app: ksqldb-server
      pod-template-hash: 5664d9c6c7
    name: ksqldb-server-5664d9c6c7-lz6cq
    namespace: kafka
  spec:
    containers:
    - env:
      - name: KSQL_BOOTSTRAP_SERVERS
        value: PLAINTEXT://kafka1:9092
      - name: KSQL_LISTENERS
        value: http://0.0.0.0:8088/
      - name: KSQL_KSQL_SERVICE_ID
        value: ksqldb-server_
      image: confluentinc/cp-ksqldb-server:7.8.0
      name: ksqldb-server
      ports:
      - containerPort: 8088
        protocol: TCP
    volumes:
    - name: kube-api-access-4kk8k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    labels:
      app: redpanda-console
      pod-template-hash: 97fb8587c
    name: redpanda-console-97fb8587c-7hwqr
    namespace: kafka
  spec:
    containers:
    - env:
      - name: KAFKA_BROKERS
        value: kafka1:9092
      - name: SCHEMA_REGISTRY
        value: "[{\n  \"url\": \"http://kafka-schema-registry:8081\"\n}]\n"
      image: docker.redpanda.com/redpandadata/console:latest
      name: redpanda-console
      ports:
      - containerPort: 8080
        protocol: TCP
    volumes:
    - name: kube-api-access-fprdh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Pod
  metadata:
    labels:
      app: zoo1
      pod-template-hash: f5db89b6d
    name: zoo1-f5db89b6d-jh862
    namespace: kafka
  spec:
    containers:
    - env:
      - name: ZOOKEEPER_CLIENT_PORT
        value: '2181'
      - name: ZOOKEEPER_SERVER_ID
        value: '1'
      - name: ZOOKEEPER_SERVERS
        value: zoo1:2888:3888
      image: confluentinc/cp-zookeeper:7.8.0
      name: zoo1
      ports:
      - containerPort: 2181
        protocol: TCP
    volumes:
    - name: kube-api-access-khgzt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
- apiVersion: v1
  kind: Service
  metadata:
    name: kafdrop
    namespace: kafka
  spec: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: kafka-connect
    namespace: kafka
  spec: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: kafka-rest-proxy
    namespace: kafka
  spec: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: kafka-schema-registry
    namespace: kafka
  spec: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: kafka1
    namespace: kafka
  spec: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: kowl
    namespace: kafka
  spec: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: ksqldb-server
    namespace: kafka
  spec: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: redpanda-console
    namespace: kafka
  spec: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: zoo1
    namespace: kafka
  spec: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: kafka-schema-registry
    namespace: kafka
  spec: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: kafka1
    namespace: kafka
  spec: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ksqldb-server
    namespace: kafka
  spec: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: redpanda-console
    namespace: kafka
  spec: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: zoo1
    namespace: kafka
  spec: {}
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    labels:
      app: kafka-schema-registry
      pod-template-hash: 6cf6b5d779
    name: kafka-schema-registry-6cf6b5d779
    namespace: kafka
  spec: {}
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    labels:
      app: kafka1
      pod-template-hash: 6ffb9f7bbf
    name: kafka1-6ffb9f7bbf
    namespace: kafka
  spec: {}
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    labels:
      app: ksqldb-server
      pod-template-hash: 5664d9c6c7
    name: ksqldb-server-5664d9c6c7
    namespace: kafka
  spec: {}
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    labels:
      app: redpanda-console
      pod-template-hash: 75d948d847
    name: redpanda-console-75d948d847
    namespace: kafka
  spec: {}
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    labels:
      app: redpanda-console
      pod-template-hash: 97fb8587c
    name: redpanda-console-97fb8587c
    namespace: kafka
  spec: {}
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    labels:
      app: redpanda-console
      pod-template-hash: dccb6d779
    name: redpanda-console-dccb6d779
    namespace: kafka
  spec: {}
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    labels:
      app: zoo1
      pod-template-hash: f5db89b6d
    name: zoo1-f5db89b6d
    namespace: kafka
  spec: {}
