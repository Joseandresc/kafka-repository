apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: '2025-06-25T06:18:23Z'
    generateName: kafka1-6ffb9f7bbf-
    labels:
      app: kafka1
      pod-template-hash: 6ffb9f7bbf
    name: kafka1-6ffb9f7bbf-vq4g4
    namespace: kafka
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kafka1-6ffb9f7bbf
      uid: 6ebdfaaa-ddc4-4811-bb76-dc4fe4b7db18
    resourceVersion: '502834'
    uid: 18a6fb7b-9c67-484e-ba28-4d0f9363caf6
  spec:
    containers:
    - env:
      - name: KAFKA_ADVERTISED_LISTENERS
        value: INTERNAL://kafka1:9092,EXTERNAL://134.33.24.51:30502
      - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
        value: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - name: KAFKA_INTER_BROKER_LISTENER_NAME
        value: INTERNAL
      - name: KAFKA_LISTENERS
        value: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9094
      - name: KAFKA_ZOOKEEPER_CONNECT
        value: zoo1:2181
      - name: KAFKA_BROKER_ID
        value: '1'
      - name: KAFKA_LOG4J_LOGGERS
        value: kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO
      - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        value: '1'
      - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
        value: '1'
      - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
        value: '1'
      - name: KAFKA_JMX_PORT
        value: '9999'
      - name: KAFKA_JMX_HOSTNAME
        value: localhost
      - name: KAFKA_AUTHORIZER_CLASS_NAME
        value: kafka.security.authorizer.AclAuthorizer
      - name: KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND
        value: 'true'
      image: confluentinc/cp-kafka:7.8.0
      imagePullPolicy: IfNotPresent
      name: kafka1
      ports:
      - containerPort: 9092
        protocol: TCP
      - containerPort: 9094
        protocol: TCP
      - containerPort: 9999
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8sg5f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-kafkapool-21228749-vmss000003
    nodeSelector:
      agentpool: kafkapool
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8sg5f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: '2025-08-25T22:40:42Z'
      status: 'True'
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: '2025-08-25T22:39:43Z'
      status: 'True'
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: '2025-08-25T22:40:42Z'
      status: 'True'
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: '2025-08-25T22:40:42Z'
      status: 'True'
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: '2025-08-25T22:39:43Z'
      status: 'True'
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://57cd8f0ee0738cf6c953b991523f7ea32e57ddbd02941cf84e0edd83cec075a1
      image: docker.io/confluentinc/cp-kafka:7.8.0
      imageID: docker.io/confluentinc/cp-kafka@sha256:adc392d28a1e99e8c9a1ec7f087e9e91041837b35b8b7cc8b8a691b82dd581b0
      lastState: {}
      name: kafka1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: '2025-08-25T22:40:41Z'
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8sg5f
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.0.112
    podIPs:
    - ip: 10.244.0.112
    qosClass: BestEffort
    startTime: '2025-08-25T22:39:43Z'
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: '1'
      deployment.kubernetes.io/max-replicas: '2'
      deployment.kubernetes.io/revision: '1'
    creationTimestamp: '2025-06-24T22:02:41Z'
    generation: 1
    labels:
      app: kafka1
      pod-template-hash: 6ffb9f7bbf
    name: kafka1-6ffb9f7bbf
    namespace: kafka
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kafka1
      uid: 16e29556-c090-40e3-b389-53e174678c86
    resourceVersion: '502837'
    uid: 6ebdfaaa-ddc4-4811-bb76-dc4fe4b7db18
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: kafka1
        pod-template-hash: 6ffb9f7bbf
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kafka1
          pod-template-hash: 6ffb9f7bbf
      spec:
        containers:
        - env:
          - name: KAFKA_ADVERTISED_LISTENERS
            value: INTERNAL://kafka1:9092,EXTERNAL://134.33.24.51:30502
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: INTERNAL
          - name: KAFKA_LISTENERS
            value: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9094
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: zoo1:2181
          - name: KAFKA_BROKER_ID
            value: '1'
          - name: KAFKA_LOG4J_LOGGERS
            value: kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: '1'
          - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
            value: '1'
          - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
            value: '1'
          - name: KAFKA_JMX_PORT
            value: '9999'
          - name: KAFKA_JMX_HOSTNAME
            value: localhost
          - name: KAFKA_AUTHORIZER_CLASS_NAME
            value: kafka.security.authorizer.AclAuthorizer
          - name: KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND
            value: 'true'
          image: confluentinc/cp-kafka:7.8.0
          imagePullPolicy: IfNotPresent
          name: kafka1
          ports:
          - containerPort: 9092
            protocol: TCP
          - containerPort: 9094
            protocol: TCP
          - containerPort: 9999
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          agentpool: kafkapool
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
